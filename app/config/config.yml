imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: types.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: es

framework:
    #esi:             ~
    translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # http://symfony.com/doc/current/reference/configuration/framework.html#handler-id
        handler_id:  session.handler.native_file
        save_path:   "%kernel.root_dir%/../var/sessions/%kernel.environment%"
    fragments:       ~
    http_method_override: true
    assets: ~

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        mapping_types:
            enum: string
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

hwi_oauth:
    connect: 
        account_connector: my.fos.user_provider
        #registration_form: fos_user.registration.form.factory
    firewall_names:        [main]
    fosub:
        username_iterations: 30
        properties:
            facebook:    facebookId
    resource_owners:
        facebook:
            type:          facebook
            client_id:     1614107982226472
            client_secret: 368802d5b4ea8e58d280c7bed37dd5f0
            scope:         "email"
            infos_url:     "https://graph.facebook.com/me?fields=id,name,email,picture.type(square)"
            paths:
                username:       id
                nickname:       email
                name:           name
                email:          email
                profilepicture: picture.data.url
            options:
                display: popup #dialog is optimized for popup window

fos_oauth_server:
    db_driver: orm       
    client_class:        AppBundle\Entity\Client
    access_token_class:  AppBundle\Entity\AccessToken
    refresh_token_class: AppBundle\Entity\RefreshToken
    auth_code_class:     AppBundle\Entity\AuthCode  
    service:
        user_provider: fos_user.user_provider.username_email

fos_rest:
    #disable_csrf_role: ROLE_API
    param_fetcher_listener: true
    format_listener:  true
    body_listener: true
    view:
        view_response_listener:
            enabled:              true
            force:                false
        #view_response_listener: 'force'
        exception_wrapper_handler:  null
        formats:
            html: true
            jsonp: true
            json: true
            xml: false
            rss: false
        templating_formats:
            html: true    
        mime_types:
            html: ['text/html']
            json: ['application/json; charset=UTF-8', 'application/json', 'application/x-json']
            jpg: 'image/jpeg'
            png: 'image/png'
        jsonp_handler: ~
        serialize_null: false
        force_redirects:
            html: true
    serializer:
        serialize_null: false
    routing_loader:
        default_format:  json
        include_format:  false
    format_listener:
        rules:
            - { path: ^/,prefer_extension: true,fallback_format: ~, priorities: ['json','jsonp']}
    exception:
        enabled: true
        
fos_user:
    db_driver: orm
    firewall_name: main
    user_class: AppBundle\Entity\Usuario
    

# Nelmio API Doc
nelmio_api_doc:
    name: ArxisTM API
    sandbox:
        authentication:
            delivery: header
            name:     Authorization
        accept_type:        "application/json"
        body_format:
            formats:        [ "json","html" ]
            default_format: "json"
        request_format:
            method: accept_header
            formats:
                html:       "text/html"    
                json:       "application/json"

nelmio_cors:
    defaults:
        allow_origin:  ["*"]
        allow_methods: ["POST", "PUT", "GET", "DELETE", "OPTIONS"]
        allow_headers: ["content-type", "authorization"]
        max_age:       3600
    paths:
        '^/': ~    
        